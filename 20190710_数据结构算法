## 入门
数据结构：数组、链表、栈、队列、堆、二叉树、图、散列表、跳表、trie树
<br>算法：分治、排序、递归、动归、贪心、哈希、二分查找、搜索、回溯、字符串匹配
<br>复杂度：大O、平均、均摊
<br>均摊 极少情况高级别，且低高级别出现具有时序性

## 数组
### 1、为什么从0开始
    因为数组内存连续，可以使用offset确定地址，从1开始汇编多一个减一步骤
### 2、特点：连续内存、相同的类型
### 3、数组和链表的区别
```
              索引    搜索    增删
        数组   O1   On到Ologn  On
        链表   On      On      O1
```
    <br>数组支持随机访问，链表增删快
### 4、数组删除怎么加速
    应用标记删除算法（JVM标记删除的不足：①少量垃圾时效率高②产生内存碎片）
### 5、容器的优势
    支持动态扩容
### 6、数组访问越界造成死循环
    与编译器有关，内存分配时，栈内从高位向低位分配

## 链表
### 1、LRU缓存淘汰算法
（最近最少使用原则）=链表+散列表
### 2、双向链表的优势
删除操作有两种删除给定的节点、删除指定节点等于多少，第一种情况明显快。
<br>空间换时间的典型
### 3、频繁的增删，可能造成内存碎片，JAVA里面可能会频繁GC
### 4、指针的认识
```c++
    // 将某个变量赋值给某个指针 == 将变量的地址赋值给指针
    // 指针存了某个变量的地址   ==   通过这个指针可以访问这个变量
    // 例：
        // 删除链表当前节点p的下一个节点
            p->next = p->next->next
        // 增加节点x，当前p
            x.next = p.next
            p.next = x
```
### 5、链表编程注意
    NULL、一个、两个、head、tail节点
    
## 栈
### 1、应用
    chrome浏览器前进后退、括号匹配、函数栈
### 2、顺序栈和链式栈
### 3、与内存堆栈区别
    堆栈是真实物理区，保存局部变量
### 4、为什么用栈保存临时变量
    函数调用进入被调函数，对于数据而已是作用的变化，栈符合进入被调函数分配临时变量，函数结束释放，又回到之前作用域。

## 队列
### 1、应用
    线程池、阻塞队列、并发队列

## 递归
### 1、优化：递归时用散列表保存已存储的值
### 2、怎么调试
    打印日志发现，递归值  结合条件断点进行调试
### 3、尾递归
    递归在最后，保存了上一次的结果，主要节约空间，减少少量时间

## 排序
```
    冒泡（稳定）、插入（稳定）、选择（不）       On2     基于比较   原位排序
    快排（不）、归并（稳定）                   Onlogn   基于比较   归并不是原位排序
    桶、计数、基数
```
### 1、为什么插入比冒泡好：只有一个步骤插入，冒泡三个步骤
### 2、快排 
分区，选择第一数作为key，从第二个数开始遍历，如果小于key，i+1，交换i和j，最后再交换i和第一个数，返回index
       <br>index左边小于index，右边大于index，递归
   <br>归并 排列两个有序数组，返回一个；递归地分成两个数组再合并成一个
### 3、冒泡 遍历n-1次，每次找到最大或最小的数（优化：设置exchange flag）
### 4、插入 从有序数组中插入一个数，从这个有序的序列从后向前比较交换
### 5、选择 遍历n-1趟，每趟找到最大（小）值的index，和最后（前）一个数交换，减少了交换次数
### 6、求无序数组第K大的数 
```
--利用快速排序的思想，从数组S中随机找出一个元素X，把数组分为两部分Sa和Sb。Sa中的元素大于等于X，Sb中元素小于X。这时有两种情况：
  1. Sa中元素的个数小于k，则Sb中的第k-|Sa|个元素即为第k大数；
  2. Sa中元素的个数大于等于k，则返回Sa中的第k大数。时间复杂度O(n)，平均k*logk，最坏k*n
--用O(4*n)的方法对原数组建最大堆，然后pop出k次即可。时间复杂度为O(4*n + k*logn)
--维护一个k大小的最小堆，对于数组中的每一个元素判断与堆顶的大小，若堆顶较大，则不管，否则，弹出堆顶，将当前值插入到堆中。时间复杂度O(n * logk)
--（对数据有要求？）利用hash保存数组中元素Si出现的次数，利用计数排序的思想，线性从大到小扫描过程中，前面有k-1个数则为第k大数，平均时间复杂度O(n)
```
### 7、对n个有序数组提取所有里面前k大的数  归并思想

## 线性排序
    适合外部排序
### 1、比如说我们有 10GB 的订单数据，我们希望按订单金额（假设金额都是正整数）进行排序，但是我们的内存有限，只有几百 MB。 桶排序
### 2、给100万人的分数排序 计数排序
### 3、给电话号码、单词排序 基数排序

## 二分查找
代码见github
